# Prometheus Configuration for Employee Management System
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'employee-management-monitor'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "alert_rules.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Employee Management System Application
  - job_name: 'employee-management-app'
    static_configs:
      - targets: ['app:8080']
    scrape_interval: 15s
    metrics_path: /actuator/prometheus
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']
    basic_auth:
      username: 'monitoring'
      password: 'monitoring_password'

  # PostgreSQL Database (using postgres_exporter)
  - job_name: 'postgresql'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: /metrics

  # Redis Cache (using redis_exporter)
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics

  # Nginx (using nginx-prometheus-exporter)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s
    metrics_path: /metrics

  # Node Exporter (system metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics

  # JVM Metrics (additional JVM monitoring)
  - job_name: 'jvm-metrics'
    static_configs:
      - targets: ['app:8080']
    scrape_interval: 15s
    metrics_path: /actuator/prometheus
    params:
      format: ['prometheus']
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'jvm_.*'
        target_label: __name__
        replacement: '${1}'

  # Custom Business Metrics
  - job_name: 'business-metrics'
    static_configs:
      - targets: ['app:8080']
    scrape_interval: 30s
    metrics_path: /actuator/prometheus
    params:
      format: ['prometheus']
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: '(employee_.*|department_.*|payroll_.*|notification_.*)'
        target_label: __name__
        replacement: '${1}'

# Remote write configuration (for long-term storage)
# remote_write:
#   - url: "https://your-remote-storage/api/v1/write"
#     basic_auth:
#       username: 'remote_user'
#       password: 'remote_password'

# Remote read configuration
# remote_read:
#   - url: "https://your-remote-storage/api/v1/read"
#     basic_auth:
#       username: 'remote_user'
#       password: 'remote_password'