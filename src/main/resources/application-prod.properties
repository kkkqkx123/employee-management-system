# Production Environment Configuration
# Employee Management System - Production Profile

# ========================================
# SERVER CONFIGURATION
# ========================================
server.port=${SERVER_PORT:8080}
server.servlet.context-path=${CONTEXT_PATH:/api}
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Security Headers
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false
server.error.whitelabel.enabled=false

# ========================================
# DATABASE CONFIGURATION
# ========================================
# Primary PostgreSQL Database
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/employee_management}
spring.datasource.username=${DATABASE_USERNAME:employee_admin}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration (HikariCP)
spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAX_SIZE:30}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:10}
spring.datasource.hikari.idle-timeout=${DB_POOL_IDLE_TIMEOUT:600000}
spring.datasource.hikari.connection-timeout=${DB_POOL_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.max-lifetime=${DB_POOL_MAX_LIFETIME:1800000}
spring.datasource.hikari.leak-detection-threshold=${DB_POOL_LEAK_DETECTION:60000}
spring.datasource.hikari.pool-name=EmployeeManagementPool

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.out-of-order=false

# ========================================
# REDIS CONFIGURATION
# ========================================
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.database=${REDIS_DATABASE:0}
spring.data.redis.ssl.enabled=${REDIS_SSL_ENABLED:false}
spring.data.redis.timeout=${REDIS_TIMEOUT:2000ms}

# Redis Connection Pool
spring.data.redis.jedis.pool.max-active=${REDIS_POOL_MAX_ACTIVE:20}
spring.data.redis.jedis.pool.max-idle=${REDIS_POOL_MAX_IDLE:10}
spring.data.redis.jedis.pool.min-idle=${REDIS_POOL_MIN_IDLE:5}
spring.data.redis.jedis.pool.max-wait=${REDIS_POOL_MAX_WAIT:2000ms}

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=${CACHE_TTL:600000}
spring.cache.redis.cache-null-values=false

# ========================================
# SECURITY CONFIGURATION
# ========================================
# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:3600000}
jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:86400000}
jwt.issuer=${JWT_ISSUER:employee-management-system}

# Encryption Configuration
encryption.key=${ENCRYPTION_KEY}
encryption.algorithm=${ENCRYPTION_ALGORITHM:AES/GCM/NoPadding}

# Session Configuration
spring.session.store-type=redis
spring.session.redis.namespace=employee-management:session
spring.session.timeout=${SESSION_TIMEOUT:1800s}

# Rate Limiting
rate.limit.enabled=${RATE_LIMIT_ENABLED:true}
rate.limit.requests-per-minute=${RATE_LIMIT_RPM:100}

# ========================================
# EMAIL CONFIGURATION
# ========================================
spring.mail.host=${EMAIL_HOST}
spring.mail.port=${EMAIL_PORT:587}
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=${EMAIL_CONNECTION_TIMEOUT:5000}
spring.mail.properties.mail.smtp.timeout=${EMAIL_TIMEOUT:5000}
spring.mail.properties.mail.smtp.writetimeout=${EMAIL_WRITE_TIMEOUT:5000}

# Email Templates
email.template.path=${EMAIL_TEMPLATE_PATH:classpath:/templates/email/}
email.from.address=${EMAIL_FROM_ADDRESS:noreply@company.com}
email.from.name=${EMAIL_FROM_NAME:Employee Management System}

# ========================================
# LOGGING CONFIGURATION
# ========================================
# Root Logging Level
logging.level.root=WARN

# Application Logging
logging.level.com.example.demo=INFO
logging.level.com.example.demo.security=INFO
logging.level.com.example.demo.payroll=INFO

# Framework Logging
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.flywaydb=INFO

# File Logging
logging.file.name=${LOG_FILE_PATH:logs/employee-management.log}
logging.file.max-size=${LOG_FILE_MAX_SIZE:50MB}
logging.file.max-history=${LOG_FILE_MAX_HISTORY:30}
logging.file.total-size-cap=${LOG_FILE_TOTAL_SIZE:1GB}

# Logging Pattern
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId},%X{spanId}] %logger{36} - %msg%n
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# ========================================
# MONITORING & ACTUATOR CONFIGURATION
# ========================================
# Actuator Endpoints
management.endpoints.web.exposure.include=health,info,metrics,prometheus,loggers
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.endpoint.info.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true

# Health Checks
management.health.redis.enabled=true
management.health.db.enabled=true
management.health.mail.enabled=true
management.health.diskspace.enabled=true

# Metrics
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99
management.metrics.tags.application=employee-management-system
management.metrics.tags.environment=${ENVIRONMENT:production}

# Info Endpoint
info.app.name=Employee Management System
info.app.version=@project.version@
info.app.description=@project.description@
info.app.encoding=@project.build.sourceEncoding@
info.java.version=@java.version@

# ========================================
# CORS CONFIGURATION
# ========================================
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://yourdomain.com}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:Authorization,Content-Type,X-Requested-With,X-CSRF-TOKEN}
cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}
cors.max-age=${CORS_MAX_AGE:3600}

# ========================================
# FILE STORAGE CONFIGURATION
# ========================================
file.upload.directory=${FILE_UPLOAD_DIR:/var/app/uploads}
file.temp.directory=${FILE_TEMP_DIR:/var/app/temp}
file.max-size=${FILE_MAX_SIZE:10MB}
file.allowed-types=${FILE_ALLOWED_TYPES:image/jpeg,image/png,application/pdf,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet}

# ========================================
# SSL/TLS CONFIGURATION
# ========================================
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store=${SSL_KEYSTORE:}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:}
server.ssl.key-store-type=${SSL_KEYSTORE_TYPE:PKCS12}
server.ssl.key-alias=${SSL_KEY_ALIAS:}
server.ssl.protocol=${SSL_PROTOCOL:TLS}
server.ssl.enabled-protocols=${SSL_ENABLED_PROTOCOLS:TLSv1.2,TLSv1.3}

# ========================================
# ASYNC CONFIGURATION
# ========================================
async.core-pool-size=${ASYNC_CORE_POOL_SIZE:5}
async.max-pool-size=${ASYNC_MAX_POOL_SIZE:20}
async.queue-capacity=${ASYNC_QUEUE_CAPACITY:100}
async.thread-name-prefix=async-executor-

# ========================================
# WEBSOCKET CONFIGURATION
# ========================================
websocket.allowed-origins=${WEBSOCKET_ALLOWED_ORIGINS:https://yourdomain.com}
websocket.message-size-limit=${WEBSOCKET_MESSAGE_SIZE_LIMIT:8192}
websocket.send-buffer-size=${WEBSOCKET_SEND_BUFFER_SIZE:8192}
websocket.send-time-limit=${WEBSOCKET_SEND_TIME_LIMIT:10000}

# ========================================
# BUSINESS CONFIGURATION
# ========================================
# Payroll Configuration
payroll.calculation.enabled=${PAYROLL_CALCULATION_ENABLED:true}
payroll.audit.enabled=${PAYROLL_AUDIT_ENABLED:true}

# Employee Configuration
employee.import.batch-size=${EMPLOYEE_IMPORT_BATCH_SIZE:100}
employee.export.max-records=${EMPLOYEE_EXPORT_MAX_RECORDS:10000}

# Notification Configuration
notification.cleanup.enabled=${NOTIFICATION_CLEANUP_ENABLED:true}
notification.cleanup.days=${NOTIFICATION_CLEANUP_DAYS:90}