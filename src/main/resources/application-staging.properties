# Staging Environment Configuration
# Employee Management System - Staging Profile

# ========================================
# SERVER CONFIGURATION
# ========================================
server.port=${SERVER_PORT:8080}
server.servlet.context-path=${CONTEXT_PATH:/api}
server.compression.enabled=true

# Error Handling (More verbose than production for debugging)
server.error.include-message=on_param
server.error.include-binding-errors=on_param
server.error.include-stacktrace=on_param
server.error.include-exception=false

# ========================================
# DATABASE CONFIGURATION
# ========================================
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/employee_management_staging}
spring.datasource.username=${DATABASE_USERNAME:employee_admin}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool (Smaller than production)
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=30000

# JPA Configuration (More verbose for debugging)
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ========================================
# REDIS CONFIGURATION
# ========================================
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.database=1
spring.data.redis.timeout=2000ms

# ========================================
# SECURITY CONFIGURATION
# ========================================
jwt.secret=${JWT_SECRET}
jwt.expiration=7200000
jwt.refresh-expiration=172800000
encryption.key=${ENCRYPTION_KEY}

# ========================================
# EMAIL CONFIGURATION
# ========================================
spring.mail.host=${EMAIL_HOST:localhost}
spring.mail.port=${EMAIL_PORT:1025}
spring.mail.username=${EMAIL_USERNAME:}
spring.mail.password=${EMAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false

# ========================================
# LOGGING CONFIGURATION
# ========================================
logging.level.root=INFO
logging.level.com.example.demo=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

logging.file.name=logs/employee-management-staging.log
logging.file.max-size=20MB
logging.file.max-history=10

# ========================================
# MONITORING CONFIGURATION
# ========================================
management.endpoints.web.exposure.include=health,info,metrics,loggers,env,configprops
management.endpoint.health.show-details=always
management.endpoint.env.show-values=when-authorized

# ========================================
# CORS CONFIGURATION
# ========================================
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://staging.yourdomain.com}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=Authorization,Content-Type,X-Requested-With
cors.allow-credentials=true

# ========================================
# FILE STORAGE CONFIGURATION
# ========================================
file.upload.directory=${FILE_UPLOAD_DIR:/tmp/staging/uploads}
file.temp.directory=${FILE_TEMP_DIR:/tmp/staging/temp}
file.max-size=5MB