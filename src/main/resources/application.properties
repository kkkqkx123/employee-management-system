# Employee Management System - Main Configuration
# Spring Boot 3.5.4 with Java 24

# Server Configuration
server.port=8080
server.servlet.context-path=/api
server.error.include-message=on_param
server.error.include-binding-errors=on_param

# Application Information
spring.application.name=Employee Management System
info.app.name=Employee Management System
info.app.description=Spring Boot Employee Management System with PostgreSQL and Redis
info.app.version=1.0.0

# Profile Configuration
# spring.profiles.active=dev
spring.profiles.active=hybrid

# PostgreSQL Database Configuration
# spring.datasource.url=jdbc:postgresql://localhost:5432/employee_management
# spring.datasource.username=employee_admin
# spring.datasource.password=dev_password123
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:employee_management}
spring.datasource.username=${DB_USERNAME:employee_admin}
spring.datasource.password=${DB_PASSWORD:dev_password123}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.pool-name=EmployeeManagementPool

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.out-of-order=false

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.database=${REDIS_DB:0}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0
spring.data.redis.lettuce.pool.max-wait=-1ms

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=600000
spring.cache.redis.cache-null-values=false

# Security Configuration
# JWT Configuration (use environment variables in production)
jwt.secret=${JWT_SECRET:mySecretKeyForDevelopmentOnlyChangeInProduction}
jwt.expiration=86400000
jwt.refresh-expiration=604800000

# Encryption Configuration (use environment variables in production)
encryption.key=${ENCRYPTION_KEY:myEncryptionKeyForDevelopmentOnly}

# Email Configuration
spring.mail.host=localhost
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME:}
spring.mail.password=${EMAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Async Configuration
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=20
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=async-

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when_authorized
management.metrics.export.prometheus.enabled=true

# Logging Configuration
logging.level.com.example.demo=INFO
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

# WebSocket Configuration
app.websocket.allowed-origins=http://localhost:3000,http://localhost:5173,http://localhost:8080
app.websocket.heartbeat.client=10000
app.websocket.heartbeat.server=10000

# CSRF Configuration
app.csrf.enabled=true
app.csrf.cookie.name=XSRF-TOKEN
app.csrf.header.name=X-XSRF-TOKEN
app.csrf.parameter.name=_csrf
app.csrf.cookie.http-only=false
app.csrf.cookie.secure=false
app.csrf.cookie.same-site=Lax